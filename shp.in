AS_INIT
# vim: set filetype=sh :

usage ()
{
  AS_ECHO("Usage:
    shp ?-e *command*? ?script? *files ...*")
  AS_EXIT(0)
}

atexit ()
{
  # Delete temporary directory possibly made by AS_TMPDIR
  AS_IF([test -d "$tmp"], [rm -rf "$tmp"])
}
trap atexit EXIT 
trap 'trap - EXIT; atexit; AS_EXIT(1)' INT PIPE TERM

# Make temporary directory and write the name into $tmp
AS_TMPDIR(shp)

shp_prog="$tmp/prog.tcl"
shp_front="$tmp/front.sh"
export shp_front

AS_IF([(dirname /) >/dev/null 2>&1 && test "X`dirname / 2>&1`" = "X/"], [
  shp_mydir="`dirname $as_myself`/"
], [
  shp_mydir=""
])

# Parse command-line arguments
shp_arg_e=
shp_arg_f=
while getopts e:f:h shp_opt; do
  AS_CASE([$shp_opt],
    [e], [shp_arg_e=$OPTARG],
    [f], [shp_arg_f=$OPTARG])
done
shift `expr $OPTIND - 1`

AS_INIT_GENERATED([$shp_front])
AS_IF([test -n "$shp_arg_f"], [
  AS_ECHO_N(["exec $shp_arg_f"]) >> $shp_front
], [
  AS_ECHO_N(["exec ${shp_mydir}shpfront"]) >> $shp_front
])
AS_ECHO(["AS_ESCAPE([ "$@"])"]) >> $shp_front

# Compile
AS_IF([test -n "$shp_arg_e"], [
  AS_ECHO("$shp_arg_e") | "${shp_mydir}shpc" > "$shp_prog"
  shp_compilation_status=$?
], [test -n "$1"], [
  "${shp_mydir}shpc" "$@" > "$shp_prog"
  shp_compilation_status=$?
  shift
], [
  usage
])

AS_IF([test $shp_compilation_status -ne 0], [
  AS_ECHO(["Compilation failed."])
  AS_EXIT(1)
])

# Run
"${shp_mydir}shprun.tcl" "$shp_prog" "$@"
